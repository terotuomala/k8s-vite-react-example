---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    app: client
spec:
  selector:
    matchLabels:
      app: client
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: client
    spec:
      restartPolicy: Always
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agent
                operator: In
                values:
                - "true"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - client
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: client
        image: IMAGE_NAME
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000 # node
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        ports:
        - name: http-port
          containerPort: 3000
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        readinessProbe:
          httpGet:
            path: /
            port: http-port
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 5
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /
            port: http-port
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 5
          successThreshold: 1
